// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LoanApplication {
  id            Int       @id @default(autoincrement())
  applicantId   Int
  walletId      String
  amount        Float
  status        LoanStatus @default(PENDING)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  activeLoans   ActiveLoan[]  // Revisar necesidad (el limite es de acuerdo a la suma de creditos activos vs credito total)
  applicant     PassportProfile @relation(fields: [applicantId], references: [id])
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
}

model ActiveLoan {
  id            Int      @id @default(autoincrement())
  applicantId   Int
  walletId      String
  loanId        Int
  amount        Float
  dueDate       DateTime
  isOverdue     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime   @updatedAt
  loan          LoanApplication @relation(fields: [loanId], references: [id])
  applicant     PassportProfile @relation(fields: [applicantId], references: [id])
}

model PassportProfile {
  id                      Int         @id @default(autoincrement())
  walletId                String
  talentPassportId        Int
  talentUserId            String
  name                    String
  profilePictureUrl       String
  verified                Boolean
  humanCheck              Boolean
  score                   Int
  activityScore           Int
  identityScore           Int
  skillsScore             Int
  nominationsReceived     Int
  socialsLinked           Int
  followerCount           Int
  activeLoans             ActiveLoan[]
  loanApplications        LoanApplication[]

  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
}